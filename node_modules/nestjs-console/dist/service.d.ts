import { INestApplicationContext } from '@nestjs/common';
import * as commander from 'commander';
import { CreateCommandOptions } from './decorators';
import { CommandActionHandler, CommandActionWrapper, CommandResponse } from './interfaces';
export declare class ConsoleService {
    protected container?: INestApplicationContext;
    protected commands: Map<string, commander.Command>;
    protected cli: commander.Command;
    constructor(cli: commander.Command);
    static createCli(name?: string): commander.Command;
    resetCli(): void;
    getRootCli(): commander.Command;
    getCli(name?: string): commander.Command | undefined;
    setContainer(container: INestApplicationContext): ConsoleService;
    getContainer(): INestApplicationContext | undefined;
    static createHandler(action: CommandActionHandler): CommandActionWrapper;
    init(argv: string[]): Promise<CommandResponse>;
    createCommand(options: CreateCommandOptions, handler: CommandActionHandler, parent: commander.Command, commanderOptions?: commander.CommandOptions): commander.Command;
    createGroupCommand(options: CreateCommandOptions, parent: commander.Command): commander.Command;
    getCommandFullName(command: commander.Command): string;
}
//# sourceMappingURL=service.d.ts.map